server:
  port: ${server_port}
spring:
  profiles: docker
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  datasource:
    url: ${lecture_database_url}
    username: ${database_userid}
    password: ${database_password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  kafka:
    bootstrap-servers: my-kafka.kafka.svc.cluster.local:9092
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka.kafka.svc.cluster.local:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        inputChannel:
          destination: myTopic
          contentType: application/json
          group: Lecture
        outputChannel:
          destination: myTopic
          contentType: application/json
logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug


