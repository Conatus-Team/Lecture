server:
  port: ${SERVER_PORT}

---
spring:
  session:
    jdbc:
      initialize-schema: always
  profiles:
    active: aws
  jpa:
    database-platform: org.hibernate.dialect.MySQL5Dialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERID}
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_ENDPOINT}
          defaultBrokerPort: 9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: Group
          destination: conatus
          contentType: application/json
        event-out:
          destination: conatus
          contentType: application/json
#
#
#  cloud:
#    stream:
#      kafka:
#        binder:
#          brokers:
#            - ${KAFKA_ENDPOINT}
#      bindings:
#        input:
#          destination: conatus
#          contentType: application/json
#          group: Group
#        output:
#          destination: conatus
#          contentType: application/json
#          group: Group

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

---
#spring:
#  session:
#    jdbc:
#      initialize-schema: always
#  profiles: local
#  jpa:
#    database-platform: org.hibernate.dialect.MySQL5Dialect
#    hibernate:
#      ddl-auto: none
#    properties:
#      hibernate:
#        show_sql: true
#        format_sql: true
#  datasource:
#    url: jdbc:localhost:3306/Group?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
#    username: admin
#    password: admin
#    driver-class-name: com.mysql.cj.jdbc.Driver
#  cloud:
#    stream:
#      kafka:
#        binder:
#          brokers: localhost:9092
#        streams:
#          binder:
#            configuration:
#              default:
#                key:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#                value:
#                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
#      bindings:
#        event-in:
#          group: Group
#          destination: conatus
#          contentType: application/json
#        event-out:
#          destination: conatus
#          contentType: application/json
#
#logging:
#  level:
#    org.hibernate.type: trace
#    org.springframework.cloud: debug