server:
  port: 8080

---

spring:
  profiles: default
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    database: mysql
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERID}
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_BROKERS}
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: Lecture
          destination: moine
          contentType: application/json
        event-out:
          destination: moine
          contentType: application/json

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace
    org.springframework.cloud: debug


server:
  port: 8080
---

spring:
  profiles: aws
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_BROKERS}
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: Lecture
          destination: moine
          contentType: application/json
        event-out:
          destination: moine
          contentType: application/json